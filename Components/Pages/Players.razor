@page "/players"
@inject TokenService _tokenService;
@inject PlayerService _playerService;
@using Blazor.Service;
@using Blazor.Dto;
@using Newtonsoft.Json;
<PageTitle>Players</PageTitle>

<h1>Players</h1>
<p>Token Generated: @_tokenDto</p>
<p>Total Records: @length</p>
<p>@JsonConvert.SerializeObject(_players)</p>

<div class="table-responsive">
  <table class="table table-striped table-sm">
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Slug</th>
        <th>Position</th>
        <th>Team</th>
        <th>Photos</th>
      </tr>
    </thead>
    <tbody>
      @for (var i = 0; i < length; i++)
      {
        <tr>
          <td>@_players[i].Id</td>
          <td>@_players[i].Nombre</td>
          <td>@_players[i].Slug</td>
          <td>@_players[i].Posicion</td>
          <td>@_players[i].Equipo.Nombre</td>
          <td>
            <NavLink href="@($"players-photo/{_players[i].Id}")" title="Photos">
              <i class="fas fa-camera"></i>
            </NavLink>
          </td>
        </tr>
      }
    </tbody>
  </table>
</div>

@code {
  private string _tokenDto { get; set; }
  private List<PlayersDto> _players { get; set; }
  private int length { get; set; }

  protected override async Task OnInitializedAsync()
  {
    var token = await _tokenService.GetToken();
    _tokenDto = token.Token;
    _players = await _playerService.GetPlayers(_tokenDto);
    length = _players.Count();

    foreach (PlayersDto player in _players)
    {
      Console.WriteLine($"ID={player.Id} - Player={player.Nombre} - Team={player.Equipo.Nombre}");
    }
  }
}
